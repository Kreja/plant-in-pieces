extends layout.jade
block title
  title 植物碎片
block link
  script(src='/bower_components/webcomponentsjs/webcomponents.js')
  link(href='/bower_components/core-icons/core-icons.html', rel='import')
  link(href='/bower_components/core-icon-button/core-icon-button.html', rel='import')
  link(href='/bower_components/core-toolbar/core-toolbar.html', rel='import')
  link(href='/bower_components/core-animated-pages/core-animated-pages.html', rel='import')
  style.
    #container {
      overflow: hidden;
    }

    #noscroll {
      overflow-x: hidden;
      overflow-y: auto;
    }

    .card {
      position: relative;
      height: 150px;
      width: 150px;
      font-size: 50px;
      margin: 8px;
      background-color: tomato;
      border-radius: 4px;
      cursor: default;
    }

    .view {
      font-size: 250px;
      background-color: tomato;
    }
block content
  template(is='auto-binding')
    core-toolbar.toolbar
      core-icon-button(icon="{{$.pages.selected != 0 ? 'arrow-back' : 'menu'}}", on-tap='{{back}}')
      div(flex='') Stuff
      core-icon-button(icon='more-vert')
    core-animated-pages#pages(flex='', selected='0', on-core-animated-pages-transition-end='{{transitionend}}', transitions='cross-fade-all hero-transition')
      section(vertical='', layout='')
        #noscroll(fit='', hero-p='')
          #container(flex='', horizontal='', wrap='', around-justified='', layout='', cross-fade='')
            template(repeat='{{item in items}}')
              .card(vertical='', center='', center-justified='', layout='', hero-id='item-{{item}}', hero?='{{$.pages.selected === item + 1 || lastSelected === item + 1}}', on-tap='{{selectView}}')
                span(cross-fade='') {{item}}
      template(repeat='{{item in items}}')
        section(vertical='', layout='')
          .view(flex='', vertical='', center='', center-justified='', layout='', hero-id='item-{{item}}', hero?='{{$.pages.selected === item + 1 || $.pages.selected === 0}}')
            span(cross-fade='') {{item}}
block scriptlink
  script.
    addEventListener('template-bound', function(e) {
    var scope = e.target;
    var items = [], count=50;
    for (var i=0; i < count; i++) {
    items.push(i);
    }
    scope.items = items;
    scope.selectView = function(e) {
    var i = e.target.templateInstance.model.item;
    this.$.pages.selected = i+1;
    }
    scope.back = function() {
    this.lastSelected = this.$.pages.selected;
    console.log(this.lastSelected);
    this.$.pages.selected = 0;
    }
    scope.transitionend = function() {
    if (this.lastSelected) {
    this.lastSelected = null;
    }
    }
    })
